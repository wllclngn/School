/* xinu.h - Generated by xinu_generator.py
 * Generated on: 2025-06-17 00:36:34
 * By user: mod
 */
#ifndef _XINU_H_
#define _XINU_H_

#include "xinu_stddefs.h"
#include <stddef.h>

/* Process table declarations */
extern struct procent {
    unsigned long prstate;   /* Process state                          */
    char *prstkbase;         /* Base of stack                          */
    int  prstklen;           /* Stack length                           */
    char prname[16];         /* Process name                           */
    int  prio;               /* Process priority                       */
    int  quantum;            /* Quantum (ticks until rescheduling)     */
    int  ppid;               /* Parent pid                             */
} proctab[];

/* External declarations for system variables */
extern pid32 currpid;        /* Currently executing process ID         */
extern unsigned long clktime;/* Current time in seconds since boot     */
extern unsigned long count1000;/* Milliseconds since last clock tick   */

/* Include all other header files */
/// [[[ BEGIN DYNAMIC XINU MODULE INCLUDES ]]]
/// [[[ END DYNAMIC XINU MODULE INCLUDES ]]]

/* Function prototypes */
syscall resched(void);
syscall resume(pid32);
pid32 create(void *funcaddr, uint32 ssize, int priority, char *name, uint32 nargs, ...);
syscall kill(pid32 pid);
syscall sleep(uint32 delay);
syscall sleepms(uint32 delay);
syscall yield(void);
void xinu_simulation_yield(void);
void xinu_trigger_clock_interrupt(void);

#endif /* _XINU_H_ */
