/* xinu_includes.h - Wrapper for XINU headers for simulation
 * Generated on: 2025-06-16 02:14:38
 * Generated by: mol
 * This file creates a wrapper around XINU headers to enable simulation
 */

#ifndef _XINU_INCLUDES_H_
#define _XINU_INCLUDES_H_

/* Use Windows headers needed for simulation */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdarg.h>
#include <ctype.h>
#include <time.h>
#include <windows.h>

/* Define XINU types to ensure compatibility */
typedef unsigned char      byte;
typedef unsigned char      uint8;
typedef char               int8;
typedef unsigned short     uint16; 
typedef short              int16;
typedef unsigned int       uint32;
typedef int                int32;
typedef unsigned long long uint64;
typedef long long          int64;
typedef int                bool;
typedef char               bool8;
typedef int16              pri16;
typedef int32              sid32;
typedef int32              pid32;
typedef int32              qid16;
typedef unsigned int       umsg32;
typedef int                intmask;
typedef int                status;

/* Define XINU constants */
#ifndef TRUE
#define TRUE  1
#define FALSE 0
#endif

#ifndef NULL
#define NULL 0
#endif

#ifndef NPROC
#define NPROC 64
#endif

#ifndef BADPID
#define BADPID (-1)
#endif

#ifndef PR_FREE
#define PR_FREE     0
#define PR_CURR     1
#define PR_READY    2
#define PR_RECV     3
#define PR_SLEEP    4
#define PR_SUSP     5
#define PR_WAIT     6
#define PR_RECTIM   7
#endif

#ifndef PNMLEN
#define PNMLEN 16
#endif

#ifndef NDESC
#define NDESC 5
#endif

#ifndef QUANTUM
#define QUANTUM 10
#endif

#ifndef MAXPRIO
#define MAXPRIO 100
#endif

/* Return codes - avoid redefining EOF */
#define OK      1
#define SYSERR -1
/* EOF is already defined in stdio.h */
#define TIMEOUT -3
#define INTRMSG -4
#define DELETED -6
#define SYSINIT -7
#define SYSINTR -8

/* Starvation prevention defines */
#define DEFER_START 1
#define DEFER_STOP  0

/* Process table structure definition */
struct procent {
    uint16  prstate;
    pri16   prprio;
    char    *prstkptr;
    char    *prstkbase;
    uint32  prstklen;
    char    prname[PNMLEN];
    sid32   prsem;
    pid32   prparent;
    umsg32  prmsg;
    bool8   prhasmsg;
    int16   prdesc[NDESC];
};

/* Defer structure for rescheduling */
struct defer {
    int32   ndefers;    /* Number of outstanding defers */
    bool8   attempt;    /* Was resched called during deferred period? */
};

/* Shell command function signature */
typedef int (*shellcmd)(int, char **);

/* External declarations for variables defined in XINU */
extern volatile uint32 clktime;
extern volatile uint32 clkticks;
extern struct procent proctab[];
extern pid32 pstarv_pid;
extern bool8 enable_starvation_fix;
extern uint32 pstarv_ready_time;
extern uint32 last_boost_time;
extern qid16 readylist;
extern pid32 currpid;
extern uint32 preempt;
extern struct defer Defer;

/* Function declarations from XINU */
extern void kprintf(const char *fmt, ...);
extern pid32 create(void *funcaddr, uint32 ssize, pri16 priority, const char *name, uint32 nargs, ...);
extern status ready(pid32 pid);
extern status resched(void);
extern void yield(void);
extern pid32 getpid(void);
extern pri16 getprio(pid32 pid);
extern pri16 chprio(pid32 pid, pri16 newprio);
extern status resume(pid32 pid);
extern status suspend(pid32 pid);
extern pid32 dequeue(qid16 q);
extern status insert(pid32 pid, qid16 q, int key);
extern pri16 firstkey(qid16 q);
extern unsigned long resched_cntl(int defer);
extern void ctxsw(void **old, void **new);

/* Starvation test functions */
extern int starvation_test_Q1(int nargs, char *args[]);
extern int starvation_test_Q2(int nargs, char *args[]);
extern void check_pstarv_time(void);

/* Functions needed for simulation environment */
extern void initialize_system(void);
extern void update_system_time(void);
extern void Sleep(uint32 ms);

#endif /* _XINU_INCLUDES_H_ */
